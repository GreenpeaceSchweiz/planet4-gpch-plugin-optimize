(()=>{const e=(e,t,n)=>{const a=new URLSearchParams(window.location.search).get(e);if("is"===n){if(a&&a===t)return!0}else if("is_not"===n){if(a&&a!==t)return!0}else if("contains"===n){if(a&&a.includes(t))return!0}else if("does_not_contain"===n&&a&&!a.includes(t))return!0;return!1},t=(e,t,n,a,o,i)=>{if(console.log(e,t,n,a,o,i),"local_storage"===e||"session_storage"===e){const r=("local_storage"===e?localStorage:sessionStorage).getItem(t);if(null===r)return!1;if(console.log("storedValue",r),"string"===n){if("is"===o)return r===i;if("is_not"===o)return r!==i;if("contains"===o)return r.includes(i);if("does_not_contain"===o)return!r.includes(i)}else if("comma_separated"===n){const e=r.split(",").map((e=>e.trim()));if("contains"===o)return e.includes(i);if("does_not_contain"===o)return!e.includes(i)}else if("object"===n)try{const e=JSON.parse(r);if("object"!=typeof e||null===e)return!1;const t=e[a];if("is"===o)return t===i;if("is_not"===o)return t!==i;if("contains"===o&&"string"==typeof t)return t.includes(i);if("does_not_contain"===o&&"string"==typeof t)return!t.includes(i)}catch(e){return!1}}return!1},n=".gp-optimize-container";var a;(a=n,new Promise((e=>{if(document.querySelector(a))return e(document.querySelector(a));const t=new MutationObserver((()=>{document.querySelector(a)&&(t.disconnect(),e(document.querySelector(a)))}));t.observe(document.documentElement,{childList:!0,subtree:!0})}))).then((()=>{const a=document.querySelectorAll(n);console.log("Starting Optimize for blocks: ",a),a.forEach((n=>{if("true"===n.dataset.status&&void 0!==n.dataset.optimizationId){const a=n.querySelectorAll(".gp-optimize-variant");console.log("Variants: ",a);const o=((n,a)=>{let o=null;e:for(const n of a){if(new URLSearchParams(window.location.search).get("force_variant")===n.dataset.variantId){o=n.dataset.variantId;break e}if(void 0!==n.dataset.conditionals){const a=JSON.parse(n.dataset.conditionals);if("object"==typeof a)for(const i of a){let a=!1;if("url_parameter"===i.type?a=e(i.conditionalKey,i.value,i.operator):"local_storage"!==i.type&&"session_storage"!==i.type||(a=t(i.type,i.nameInStorage,i.dataType,i.conditionalKey,i.operator,i.value)),!0===a){o=n.dataset.variantId;break e}}}}if(null===o){const e=localStorage.getItem("gp-optimize-"+n);if(void 0!==e)for(const t of a)if(t.dataset.variantId===e)return console.log("Found stored variant ID: ",e),e;const t=[];for(const e of a){let n=parseInt(e.dataset.targetPercentage);isNaN(n)&&(n=50),t.push({variantId:e.dataset.variantId,weight:n})}console.log("Selected winning variant by weighted random. "),o=(e=>{const t=e.reduce(((e,t,n)=>{var a;return e.push(t.weight+(null!==(a=e[n-1])&&void 0!==a?a:0)),e}),[]),n=Math.random()*t.at(-1);return e[t.findIndex((e=>e>n))]})(t).variantId}return localStorage.setItem("gp-optimize-"+n,o),console.log("Selected winning variant: ",o),o})(n.dataset.optimizationId,a);let i;console.log("Winning variant for Optimization "+n.dataset.optimizationId+" is "+o);for(const e of a)e.dataset.variantId===o?(e.style.display="block",i=e):(e.style.display="none",e.remove());const r=n.dataset.optimizationName||n.dataset.optimizationId;"undefined"!=typeof Planet4GpchPluginOptimizeSettings&&("mixpanel"===Planet4GpchPluginOptimizeSettings.event_type?void 0!==window.mixpanel&&(console.log("Sending event to Mixpanel"),window.mixpanel.track("$experiment_started",{"Experiment name":r,"Variant name":i.dataset.variantName})):"datalayer"===Planet4GpchPluginOptimizeSettings.event_type&&(window.dataLayer=window.dataLayer||[],console.log("Sending event to DataLayer"),window.dataLayer.push({event:Planet4GpchPluginOptimizeSettings.datalayer_event_name,experiment_name:r,variant_name:i.dataset.variantName})))}}))}))})();